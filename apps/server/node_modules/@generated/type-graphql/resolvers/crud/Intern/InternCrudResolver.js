"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InternCrudResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const graphql_fields_1 = (0, tslib_1.__importDefault)(require("graphql-fields"));
const AggregateInternArgs_1 = require("./args/AggregateInternArgs");
const CreateInternArgs_1 = require("./args/CreateInternArgs");
const CreateManyInternArgs_1 = require("./args/CreateManyInternArgs");
const DeleteInternArgs_1 = require("./args/DeleteInternArgs");
const DeleteManyInternArgs_1 = require("./args/DeleteManyInternArgs");
const FindFirstInternArgs_1 = require("./args/FindFirstInternArgs");
const FindManyInternArgs_1 = require("./args/FindManyInternArgs");
const FindUniqueInternArgs_1 = require("./args/FindUniqueInternArgs");
const GroupByInternArgs_1 = require("./args/GroupByInternArgs");
const UpdateInternArgs_1 = require("./args/UpdateInternArgs");
const UpdateManyInternArgs_1 = require("./args/UpdateManyInternArgs");
const UpsertInternArgs_1 = require("./args/UpsertInternArgs");
const helpers_1 = require("../../../helpers");
const Intern_1 = require("../../../models/Intern");
const AffectedRowsOutput_1 = require("../../outputs/AffectedRowsOutput");
const AggregateIntern_1 = require("../../outputs/AggregateIntern");
const InternGroupBy_1 = require("../../outputs/InternGroupBy");
let InternCrudResolver = class InternCrudResolver {
    async intern(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.findUnique({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findFirstIntern(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.findFirst({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async interns(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.findMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createIntern(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.create({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createManyIntern(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.createMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteIntern(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.delete({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateIntern(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.update({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteManyIntern(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.deleteMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateManyIntern(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.updateMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async upsertIntern(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.upsert({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async aggregateIntern(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.aggregate({
            ...args,
            ...(0, helpers_1.transformFields)((0, graphql_fields_1.default)(info)),
        });
    }
    async groupByIntern(ctx, info, args) {
        const { _count, _avg, _sum, _min, _max } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).intern.groupBy({
            ...args,
            ...Object.fromEntries(Object.entries({ _count, _avg, _sum, _min, _max }).filter(([_, v]) => v != null)),
        });
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => Intern_1.Intern, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindUniqueInternArgs_1.FindUniqueInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "intern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => Intern_1.Intern, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindFirstInternArgs_1.FindFirstInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "findFirstIntern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => [Intern_1.Intern], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindManyInternArgs_1.FindManyInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "interns", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => Intern_1.Intern, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, CreateInternArgs_1.CreateInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "createIntern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, CreateManyInternArgs_1.CreateManyInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "createManyIntern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => Intern_1.Intern, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, DeleteInternArgs_1.DeleteInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "deleteIntern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => Intern_1.Intern, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpdateInternArgs_1.UpdateInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "updateIntern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, DeleteManyInternArgs_1.DeleteManyInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "deleteManyIntern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpdateManyInternArgs_1.UpdateManyInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "updateManyIntern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => Intern_1.Intern, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpsertInternArgs_1.UpsertInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "upsertIntern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => AggregateIntern_1.AggregateIntern, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, AggregateInternArgs_1.AggregateInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "aggregateIntern", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => [InternGroupBy_1.InternGroupBy], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, GroupByInternArgs_1.GroupByInternArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], InternCrudResolver.prototype, "groupByIntern", null);
InternCrudResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => Intern_1.Intern)
], InternCrudResolver);
exports.InternCrudResolver = InternCrudResolver;
