"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByInternArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const InternOrderByWithAggregationInput_1 = require("../../../inputs/InternOrderByWithAggregationInput");
const InternScalarWhereWithAggregatesInput_1 = require("../../../inputs/InternScalarWhereWithAggregatesInput");
const InternWhereInput_1 = require("../../../inputs/InternWhereInput");
const InternScalarFieldEnum_1 = require("../../../../enums/InternScalarFieldEnum");
let GroupByInternArgs = class GroupByInternArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => InternWhereInput_1.InternWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", InternWhereInput_1.InternWhereInput)
], GroupByInternArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [InternOrderByWithAggregationInput_1.InternOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByInternArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [InternScalarFieldEnum_1.InternScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByInternArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => InternScalarWhereWithAggregatesInput_1.InternScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", InternScalarWhereWithAggregatesInput_1.InternScalarWhereWithAggregatesInput)
], GroupByInternArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByInternArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByInternArgs.prototype, "skip", void 0);
GroupByInternArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByInternArgs);
exports.GroupByInternArgs = GroupByInternArgs;
