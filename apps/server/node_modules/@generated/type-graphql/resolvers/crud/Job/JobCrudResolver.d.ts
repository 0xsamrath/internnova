import { GraphQLResolveInfo } from "graphql";
import { AggregateJobArgs } from "./args/AggregateJobArgs";
import { CreateJobArgs } from "./args/CreateJobArgs";
import { CreateManyJobArgs } from "./args/CreateManyJobArgs";
import { DeleteJobArgs } from "./args/DeleteJobArgs";
import { DeleteManyJobArgs } from "./args/DeleteManyJobArgs";
import { FindFirstJobArgs } from "./args/FindFirstJobArgs";
import { FindManyJobArgs } from "./args/FindManyJobArgs";
import { FindUniqueJobArgs } from "./args/FindUniqueJobArgs";
import { GroupByJobArgs } from "./args/GroupByJobArgs";
import { UpdateJobArgs } from "./args/UpdateJobArgs";
import { UpdateManyJobArgs } from "./args/UpdateManyJobArgs";
import { UpsertJobArgs } from "./args/UpsertJobArgs";
import { Job } from "../../../models/Job";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateJob } from "../../outputs/AggregateJob";
import { JobGroupBy } from "../../outputs/JobGroupBy";
export declare class JobCrudResolver {
    job(ctx: any, info: GraphQLResolveInfo, args: FindUniqueJobArgs): Promise<Job | null>;
    findFirstJob(ctx: any, info: GraphQLResolveInfo, args: FindFirstJobArgs): Promise<Job | null>;
    jobs(ctx: any, info: GraphQLResolveInfo, args: FindManyJobArgs): Promise<Job[]>;
    createJob(ctx: any, info: GraphQLResolveInfo, args: CreateJobArgs): Promise<Job>;
    createManyJob(ctx: any, info: GraphQLResolveInfo, args: CreateManyJobArgs): Promise<AffectedRowsOutput>;
    deleteJob(ctx: any, info: GraphQLResolveInfo, args: DeleteJobArgs): Promise<Job | null>;
    updateJob(ctx: any, info: GraphQLResolveInfo, args: UpdateJobArgs): Promise<Job | null>;
    deleteManyJob(ctx: any, info: GraphQLResolveInfo, args: DeleteManyJobArgs): Promise<AffectedRowsOutput>;
    updateManyJob(ctx: any, info: GraphQLResolveInfo, args: UpdateManyJobArgs): Promise<AffectedRowsOutput>;
    upsertJob(ctx: any, info: GraphQLResolveInfo, args: UpsertJobArgs): Promise<Job>;
    aggregateJob(ctx: any, info: GraphQLResolveInfo, args: AggregateJobArgs): Promise<AggregateJob>;
    groupByJob(ctx: any, info: GraphQLResolveInfo, args: GroupByJobArgs): Promise<JobGroupBy[]>;
}
