"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindManyJobArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const JobOrderByWithRelationInput_1 = require("../../../inputs/JobOrderByWithRelationInput");
const JobWhereInput_1 = require("../../../inputs/JobWhereInput");
const JobWhereUniqueInput_1 = require("../../../inputs/JobWhereUniqueInput");
const JobScalarFieldEnum_1 = require("../../../../enums/JobScalarFieldEnum");
let FindManyJobArgs = class FindManyJobArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => JobWhereInput_1.JobWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", JobWhereInput_1.JobWhereInput)
], FindManyJobArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobOrderByWithRelationInput_1.JobOrderByWithRelationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyJobArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => JobWhereUniqueInput_1.JobWhereUniqueInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", JobWhereUniqueInput_1.JobWhereUniqueInput)
], FindManyJobArgs.prototype, "cursor", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyJobArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyJobArgs.prototype, "skip", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobScalarFieldEnum_1.JobScalarFieldEnum], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyJobArgs.prototype, "distinct", void 0);
FindManyJobArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], FindManyJobArgs);
exports.FindManyJobArgs = FindManyJobArgs;
