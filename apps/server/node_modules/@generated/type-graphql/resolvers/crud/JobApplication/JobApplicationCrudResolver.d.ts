import { GraphQLResolveInfo } from "graphql";
import { AggregateJobApplicationArgs } from "./args/AggregateJobApplicationArgs";
import { CreateJobApplicationArgs } from "./args/CreateJobApplicationArgs";
import { CreateManyJobApplicationArgs } from "./args/CreateManyJobApplicationArgs";
import { DeleteJobApplicationArgs } from "./args/DeleteJobApplicationArgs";
import { DeleteManyJobApplicationArgs } from "./args/DeleteManyJobApplicationArgs";
import { FindFirstJobApplicationArgs } from "./args/FindFirstJobApplicationArgs";
import { FindManyJobApplicationArgs } from "./args/FindManyJobApplicationArgs";
import { FindUniqueJobApplicationArgs } from "./args/FindUniqueJobApplicationArgs";
import { GroupByJobApplicationArgs } from "./args/GroupByJobApplicationArgs";
import { UpdateJobApplicationArgs } from "./args/UpdateJobApplicationArgs";
import { UpdateManyJobApplicationArgs } from "./args/UpdateManyJobApplicationArgs";
import { UpsertJobApplicationArgs } from "./args/UpsertJobApplicationArgs";
import { JobApplication } from "../../../models/JobApplication";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateJobApplication } from "../../outputs/AggregateJobApplication";
import { JobApplicationGroupBy } from "../../outputs/JobApplicationGroupBy";
export declare class JobApplicationCrudResolver {
    jobApplication(ctx: any, info: GraphQLResolveInfo, args: FindUniqueJobApplicationArgs): Promise<JobApplication | null>;
    findFirstJobApplication(ctx: any, info: GraphQLResolveInfo, args: FindFirstJobApplicationArgs): Promise<JobApplication | null>;
    jobApplications(ctx: any, info: GraphQLResolveInfo, args: FindManyJobApplicationArgs): Promise<JobApplication[]>;
    createJobApplication(ctx: any, info: GraphQLResolveInfo, args: CreateJobApplicationArgs): Promise<JobApplication>;
    createManyJobApplication(ctx: any, info: GraphQLResolveInfo, args: CreateManyJobApplicationArgs): Promise<AffectedRowsOutput>;
    deleteJobApplication(ctx: any, info: GraphQLResolveInfo, args: DeleteJobApplicationArgs): Promise<JobApplication | null>;
    updateJobApplication(ctx: any, info: GraphQLResolveInfo, args: UpdateJobApplicationArgs): Promise<JobApplication | null>;
    deleteManyJobApplication(ctx: any, info: GraphQLResolveInfo, args: DeleteManyJobApplicationArgs): Promise<AffectedRowsOutput>;
    updateManyJobApplication(ctx: any, info: GraphQLResolveInfo, args: UpdateManyJobApplicationArgs): Promise<AffectedRowsOutput>;
    upsertJobApplication(ctx: any, info: GraphQLResolveInfo, args: UpsertJobApplicationArgs): Promise<JobApplication>;
    aggregateJobApplication(ctx: any, info: GraphQLResolveInfo, args: AggregateJobApplicationArgs): Promise<AggregateJobApplication>;
    groupByJobApplication(ctx: any, info: GraphQLResolveInfo, args: GroupByJobApplicationArgs): Promise<JobApplicationGroupBy[]>;
}
