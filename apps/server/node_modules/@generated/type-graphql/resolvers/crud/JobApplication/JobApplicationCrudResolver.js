"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobApplicationCrudResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const graphql_fields_1 = (0, tslib_1.__importDefault)(require("graphql-fields"));
const AggregateJobApplicationArgs_1 = require("./args/AggregateJobApplicationArgs");
const CreateJobApplicationArgs_1 = require("./args/CreateJobApplicationArgs");
const CreateManyJobApplicationArgs_1 = require("./args/CreateManyJobApplicationArgs");
const DeleteJobApplicationArgs_1 = require("./args/DeleteJobApplicationArgs");
const DeleteManyJobApplicationArgs_1 = require("./args/DeleteManyJobApplicationArgs");
const FindFirstJobApplicationArgs_1 = require("./args/FindFirstJobApplicationArgs");
const FindManyJobApplicationArgs_1 = require("./args/FindManyJobApplicationArgs");
const FindUniqueJobApplicationArgs_1 = require("./args/FindUniqueJobApplicationArgs");
const GroupByJobApplicationArgs_1 = require("./args/GroupByJobApplicationArgs");
const UpdateJobApplicationArgs_1 = require("./args/UpdateJobApplicationArgs");
const UpdateManyJobApplicationArgs_1 = require("./args/UpdateManyJobApplicationArgs");
const UpsertJobApplicationArgs_1 = require("./args/UpsertJobApplicationArgs");
const helpers_1 = require("../../../helpers");
const JobApplication_1 = require("../../../models/JobApplication");
const AffectedRowsOutput_1 = require("../../outputs/AffectedRowsOutput");
const AggregateJobApplication_1 = require("../../outputs/AggregateJobApplication");
const JobApplicationGroupBy_1 = require("../../outputs/JobApplicationGroupBy");
let JobApplicationCrudResolver = class JobApplicationCrudResolver {
    async jobApplication(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.findUnique({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findFirstJobApplication(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.findFirst({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async jobApplications(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.findMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createJobApplication(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.create({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createManyJobApplication(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.createMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteJobApplication(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.delete({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateJobApplication(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.update({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteManyJobApplication(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.deleteMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateManyJobApplication(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.updateMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async upsertJobApplication(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.upsert({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async aggregateJobApplication(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.aggregate({
            ...args,
            ...(0, helpers_1.transformFields)((0, graphql_fields_1.default)(info)),
        });
    }
    async groupByJobApplication(ctx, info, args) {
        const { _count, _avg, _sum, _min, _max } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).jobApplication.groupBy({
            ...args,
            ...Object.fromEntries(Object.entries({ _count, _avg, _sum, _min, _max }).filter(([_, v]) => v != null)),
        });
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => JobApplication_1.JobApplication, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindUniqueJobApplicationArgs_1.FindUniqueJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "jobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => JobApplication_1.JobApplication, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindFirstJobApplicationArgs_1.FindFirstJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "findFirstJobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => [JobApplication_1.JobApplication], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindManyJobApplicationArgs_1.FindManyJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "jobApplications", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => JobApplication_1.JobApplication, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, CreateJobApplicationArgs_1.CreateJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "createJobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, CreateManyJobApplicationArgs_1.CreateManyJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "createManyJobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => JobApplication_1.JobApplication, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, DeleteJobApplicationArgs_1.DeleteJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "deleteJobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => JobApplication_1.JobApplication, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpdateJobApplicationArgs_1.UpdateJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "updateJobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, DeleteManyJobApplicationArgs_1.DeleteManyJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "deleteManyJobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpdateManyJobApplicationArgs_1.UpdateManyJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "updateManyJobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => JobApplication_1.JobApplication, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpsertJobApplicationArgs_1.UpsertJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "upsertJobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => AggregateJobApplication_1.AggregateJobApplication, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, AggregateJobApplicationArgs_1.AggregateJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "aggregateJobApplication", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => [JobApplicationGroupBy_1.JobApplicationGroupBy], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, GroupByJobApplicationArgs_1.GroupByJobApplicationArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobApplicationCrudResolver.prototype, "groupByJobApplication", null);
JobApplicationCrudResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => JobApplication_1.JobApplication)
], JobApplicationCrudResolver);
exports.JobApplicationCrudResolver = JobApplicationCrudResolver;
