"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobCreateNestedManyWithoutCompanyInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const JobCreateManyCompanyInputEnvelope_1 = require("../inputs/JobCreateManyCompanyInputEnvelope");
const JobCreateOrConnectWithoutCompanyInput_1 = require("../inputs/JobCreateOrConnectWithoutCompanyInput");
const JobCreateWithoutCompanyInput_1 = require("../inputs/JobCreateWithoutCompanyInput");
const JobWhereUniqueInput_1 = require("../inputs/JobWhereUniqueInput");
let JobCreateNestedManyWithoutCompanyInput = class JobCreateNestedManyWithoutCompanyInput {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobCreateWithoutCompanyInput_1.JobCreateWithoutCompanyInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobCreateNestedManyWithoutCompanyInput.prototype, "create", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobCreateOrConnectWithoutCompanyInput_1.JobCreateOrConnectWithoutCompanyInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobCreateNestedManyWithoutCompanyInput.prototype, "connectOrCreate", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => JobCreateManyCompanyInputEnvelope_1.JobCreateManyCompanyInputEnvelope, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", JobCreateManyCompanyInputEnvelope_1.JobCreateManyCompanyInputEnvelope)
], JobCreateNestedManyWithoutCompanyInput.prototype, "createMany", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobWhereUniqueInput_1.JobWhereUniqueInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobCreateNestedManyWithoutCompanyInput.prototype, "connect", void 0);
JobCreateNestedManyWithoutCompanyInput = (0, tslib_1.__decorate)([
    TypeGraphQL.InputType("JobCreateNestedManyWithoutCompanyInput", {
        isAbstract: true
    })
], JobCreateNestedManyWithoutCompanyInput);
exports.JobCreateNestedManyWithoutCompanyInput = JobCreateNestedManyWithoutCompanyInput;
