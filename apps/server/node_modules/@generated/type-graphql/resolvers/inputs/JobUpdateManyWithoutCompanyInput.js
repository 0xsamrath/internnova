"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobUpdateManyWithoutCompanyInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const JobCreateManyCompanyInputEnvelope_1 = require("../inputs/JobCreateManyCompanyInputEnvelope");
const JobCreateOrConnectWithoutCompanyInput_1 = require("../inputs/JobCreateOrConnectWithoutCompanyInput");
const JobCreateWithoutCompanyInput_1 = require("../inputs/JobCreateWithoutCompanyInput");
const JobScalarWhereInput_1 = require("../inputs/JobScalarWhereInput");
const JobUpdateManyWithWhereWithoutCompanyInput_1 = require("../inputs/JobUpdateManyWithWhereWithoutCompanyInput");
const JobUpdateWithWhereUniqueWithoutCompanyInput_1 = require("../inputs/JobUpdateWithWhereUniqueWithoutCompanyInput");
const JobUpsertWithWhereUniqueWithoutCompanyInput_1 = require("../inputs/JobUpsertWithWhereUniqueWithoutCompanyInput");
const JobWhereUniqueInput_1 = require("../inputs/JobWhereUniqueInput");
let JobUpdateManyWithoutCompanyInput = class JobUpdateManyWithoutCompanyInput {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobCreateWithoutCompanyInput_1.JobCreateWithoutCompanyInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "create", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobCreateOrConnectWithoutCompanyInput_1.JobCreateOrConnectWithoutCompanyInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "connectOrCreate", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobUpsertWithWhereUniqueWithoutCompanyInput_1.JobUpsertWithWhereUniqueWithoutCompanyInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "upsert", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => JobCreateManyCompanyInputEnvelope_1.JobCreateManyCompanyInputEnvelope, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", JobCreateManyCompanyInputEnvelope_1.JobCreateManyCompanyInputEnvelope)
], JobUpdateManyWithoutCompanyInput.prototype, "createMany", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobWhereUniqueInput_1.JobWhereUniqueInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "set", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobWhereUniqueInput_1.JobWhereUniqueInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "disconnect", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobWhereUniqueInput_1.JobWhereUniqueInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "delete", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobWhereUniqueInput_1.JobWhereUniqueInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "connect", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobUpdateWithWhereUniqueWithoutCompanyInput_1.JobUpdateWithWhereUniqueWithoutCompanyInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "update", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobUpdateManyWithWhereWithoutCompanyInput_1.JobUpdateManyWithWhereWithoutCompanyInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "updateMany", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [JobScalarWhereInput_1.JobScalarWhereInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], JobUpdateManyWithoutCompanyInput.prototype, "deleteMany", void 0);
JobUpdateManyWithoutCompanyInput = (0, tslib_1.__decorate)([
    TypeGraphQL.InputType("JobUpdateManyWithoutCompanyInput", {
        isAbstract: true
    })
], JobUpdateManyWithoutCompanyInput);
exports.JobUpdateManyWithoutCompanyInput = JobUpdateManyWithoutCompanyInput;
