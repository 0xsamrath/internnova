"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InternGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const InternAvgAggregate_1 = require("../outputs/InternAvgAggregate");
const InternCountAggregate_1 = require("../outputs/InternCountAggregate");
const InternMaxAggregate_1 = require("../outputs/InternMaxAggregate");
const InternMinAggregate_1 = require("../outputs/InternMinAggregate");
const InternSumAggregate_1 = require("../outputs/InternSumAggregate");
let InternGroupBy = class InternGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], InternGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], InternGroupBy.prototype, "userId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], InternGroupBy.prototype, "bio", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [String], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], InternGroupBy.prototype, "interests", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], InternGroupBy.prototype, "email", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], InternGroupBy.prototype, "createdAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], InternGroupBy.prototype, "updatedAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => InternCountAggregate_1.InternCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", InternCountAggregate_1.InternCountAggregate)
], InternGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => InternAvgAggregate_1.InternAvgAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", InternAvgAggregate_1.InternAvgAggregate)
], InternGroupBy.prototype, "_avg", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => InternSumAggregate_1.InternSumAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", InternSumAggregate_1.InternSumAggregate)
], InternGroupBy.prototype, "_sum", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => InternMinAggregate_1.InternMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", InternMinAggregate_1.InternMinAggregate)
], InternGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => InternMaxAggregate_1.InternMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", InternMaxAggregate_1.InternMaxAggregate)
], InternGroupBy.prototype, "_max", void 0);
InternGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("InternGroupBy", {
        isAbstract: true
    })
], InternGroupBy);
exports.InternGroupBy = InternGroupBy;
