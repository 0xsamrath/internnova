"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const Company_1 = require("../../../models/Company");
const Job_1 = require("../../../models/Job");
const JobApplication_1 = require("../../../models/JobApplication");
const JobApplicationsArgs_1 = require("./args/JobApplicationsArgs");
const helpers_1 = require("../../../helpers");
let JobRelationsResolver = class JobRelationsResolver {
    async applications(job, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).job.findUnique({
            where: {
                id: job.id,
            },
        }).applications(args);
    }
    async company(job, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).job.findUnique({
            where: {
                id: job.id,
            },
        }).company({});
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => [JobApplication_1.JobApplication], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Job_1.Job, Object, JobApplicationsArgs_1.JobApplicationsArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobRelationsResolver.prototype, "applications", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => Company_1.Company, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Job_1.Job, Object]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], JobRelationsResolver.prototype, "company", null);
JobRelationsResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => Job_1.Job)
], JobRelationsResolver);
exports.JobRelationsResolver = JobRelationsResolver;
